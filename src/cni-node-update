#!/bin/bash

set -e

USAGE="Usage: cni-node-update <Event> <Channel>"

function main {
    local EVENT="$1"
    local CHANNEL="$2"
    local CHANNEL_PREV="${CHANNEL}.prev"
    local CHANNEL_NAME
    local CHANNEL_DATA
    local CHANNEL_DATA_PREV
    local CHANNEL_DATA_DIFF

    if [ -z "${EVENT}" ] || [ -z "${CHANNEL}" ]; then usage; fi

    CHANNEL_NAME="$(basename "${CHANNEL}")"

    echo "[${CHANNEL_NAME}] Got ${EVENT}"
    if [ "${EVENT}" != "c" ]; then return; fi

    CHANNEL_DATA="$(cat "${CHANNEL}")"
    if [ -z "${CHANNEL_DATA}" ]; then return; fi

    [ ! -e "${CHANNEL_PREV}" ] && touch "${CHANNEL_PREV}"

    CHANNEL_DATA_PREV="$(cat "${CHANNEL_PREV}")"
    CHANNEL_DATA_DIFF="$(diff <(echo -en "${CHANNEL_DATA_PREV}") \
                              <(echo -en "${CHANNEL_DATA}") | tail -n +3)"

    echo -e "[${CHANNEL_NAME}] ### Channel data ###\\n${CHANNEL_DATA}"
    echo "[${CHANNEL_NAME}] ###"
    echo -e "[${CHANNEL_NAME}] ### Channel diff ###\\n${CHANNEL_DATA_DIFF}"
    echo "[${CHANNEL_NAME}] ###"

    echo "[${CHANNEL_NAME}] Applying channel data..."
    echo apply_channel_data "${CHANNEL_NAME}" \
                       "${CHANNEL_DATA}" \
                       "${CHANNEL_DATA_PREV}"

    echo "[${CHANNEL_NAME}] Saving channel data..."
    echo "${CHANNEL_DATA}" > "${CHANNEL_PREV}"

    echo "[${CHANNEL_NAME}] Cleaning channel..."
    true > "${CHANNEL}"
    echo "[${CHANNEL_NAME}] Done."
}

function apply_channel_data {
    local CHANNEL_NAME="$1"
    local ITEM
    local ITEMS="${2//,/ }"
    local ITEMS_PREV="${3//,/ }"
    local ITEMS_TO_UNINSTALL

    ITEMS_TO_UNINSTALL="$(removed "${ITEMS}" "${ITEMS_PREV}")"

    for ITEM in ${ITEMS_TO_UNINSTALL}; do
        uninstall_"${CHANNEL_NAME}"_item "${ITEM}"
    done
    for ITEM in ${ITEMS}; do
        install_"${CHANNEL_NAME}"_item "${ITEM}"
    done
}

function install_plugins_item {
    local PLUGIN="$1"

    echo "Installing CNI plugin ${PLUGIN}..."
    install "/opt/cni/bin/${PLUGIN}" "/host/opt/cni/bin/${PLUGIN}"
    echo "Digest: $(file_digest "/host/opt/cni/bin/${PLUGIN}")"
}
function uninstall_plugins_item {
    local PLUGIN="$1"

    echo "Uninstalling CNI plugin ${PLUGIN}..."
    rm -f "/host/opt/cni/bin/${PLUGIN}"
}

function install_configs_item {
    local CONFIG="$1"
    local CONTENT; CONTENT="$(read_configmap "${CONFIG}")"

    echo "Installing CNI configuration ${CONFIG}..."
    echo "${CONTENT}" | tee "/host/etc/cni/net.d/${CONFIG}" > /dev/null
}
function uninstall_configs_item {
    local CONFIG="$1"

    echo "Uninstalling CNI configuration ${CONFIG}..."
    rm -f "/host/etc/cni/net.d/${CONFIG}"
}

function install_manifests_item {
    local MANIFEST="$1"
    local CONTENT; CONTENT="$(read_configmap "${MANIFEST}")"

    echo "Installing Kubernetes manifest ${MANIFEST}..."
    kubectl apply -f <(echo "${CONTENT}")
}
function uninstall_manifests_item {
    local MANIFEST="$1"
    local CONTENT; CONTENT="$(read_configmap "${MANIFEST}")"

    echo "Uninstalling Kubernetes manifest ${MANIFEST}..."
    kubectl delete -f <(echo "${CONTENT}")
}

function added {
    difference 2 "$@"
}
function removed {
    difference 1 "$@"
}
function difference {
    local N="$1"
    local CURRENT="$2"
    local PREVIOUS="$3"

    comm -"${N}3" <(echo "${CURRENT}" | xargs -n1 | sort) \
                  <(echo "${PREVIOUS}" | xargs -n1 | sort) |
         paste -sd" " -
}

function file_digest {
    local FILENAME="$1"
    echo "sha1:$(openssl sha1 "${FILENAME}" | sed "s/.*= //")"
}

function usage {
    >&2 echo "${USAGE}"
    exit 2
}

main "$@"
